C51 COMPILER V9.60.0.0   MAIN                                                              08/31/2021 12:55:21 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: F:\Keil_v5\C51\BIN\C51.EXE system\main.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\mcu_sdk;.\system) 
                    -DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          
   2          #include "bluetooth.h"
   3          
   4          #include "main.h"
   5          #include <intrins.h>
   6          void UartInit()   //9600bps@11.0592MHz
   7          {
   8   1        P_SW1 &= ~(3<<6);
   9   1        P_SW1 |= 1<<6;      //RXD/P3.2, TXD/P3.3
  10   1        P3M0 |= 1<<3;
  11   1        P3M1 &= ~(1<<3); //TX推挽输出
  12   1        SCON = 0x50;    //8位数据,可变波特率
  13   1        AUXR |= 0x40;   //定时器时钟1T模式,不分频
  14   1        AUXR &= 0xFE;   //串口1选择定时器1为波特率发生器
  15   1        TMOD &= 0x0F;   //设置定时器模式
  16   1        TL1 = 0xE0;   //设置定时初始值
  17   1        TH1 = 0xFE;   //设置定时初始值
  18   1        ET1 = 0;    //禁止定时器1中断
  19   1        ES=1;           //打开接收中断  
  20   1        TR1 = 1;    //定时器1开始计时
  21   1      }
  22          
  23          
  24          void Timer0Init()   //1000微秒@11.0592MHz
  25          {
  26   1        P5M0 |=1<<4;
  27   1        P5M1 &=~(1<<4); //P54输出模式
  28   1        
  29   1        AUXR |= 0x80;   //定时器0时钟1T模式
  30   1        TMOD &= 0xF0;   //设置定时器模式
  31   1        TL0 = 0xCD;   //设置定时初始值
  32   1        TH0 = 0xD4;   //设置定时初始值
  33   1        TF0 = 0;    //清除TF0标志
  34   1        ET0=1;//打开定时器0中断允许
  35   1        EA=1;//打开总中断
  36   1        TR0 = 1;    //定时器0开始计时
  37   1      }
  38          
  39          void ADCInit()
  40          {
  41   1          P5M0 &= ~(1<<5);                                //设置P5.5为ADC口
  42   1          P5M1 |= 1<<5;
  43   1      
  44   1      
  45   1          P_SW2 |= 0X80;
  46   1          ADCTIM=0X3F;
  47   1          P_SW2 &= 0X7F; 
  48   1        
  49   1          ADCCFG |= 0x0f;                              //设置ADC时钟为系统时钟/2/16/16
  50   1          ADC_CONTR |=5;                            //设置通道5
  51   1          ADC_CONTR |= 0x80;                           //使能ADC模块
  52   1        
  53   1      
  54   1      }
C51 COMPILER V9.60.0.0   MAIN                                                              08/31/2021 12:55:21 PAGE 2   

  55          
  56          
  57          u16 voltage=0;
  58          void TASK_ADC()   //1000微秒@11.0592MHz
  59          {
  60   1      
  61   1        ADC_CONTR |= 0x40;                      //启动AD转换
  62   1        while (!(ADC_CONTR & 0x20)) ;           //查询ADC完成标志
  63   1         _nop_();
  64   1         _nop_();
  65   1        ADC_CONTR &= ~0x20;                     //清完成标志
  66   1        voltage = ADC_RES*4+ADC_RESL/64;                           //读取ADC结果
  67   1        voltage = voltage *32/5;
  68   1        mcu_dp_value_update(DPID_VOLTAGE,voltage);//上报
  69   1      
  70   1        
  71   1      }
  72          u8 f_task_ad=0;
  73          void main()
  74          { 
  75   1        UartInit();  // 串口初始化
  76   1        Timer0Init();// 定时器0初始化
  77   1        bt_protocol_init();
  78   1        ADCInit();
  79   1        while(1)
  80   1        {
  81   2          bt_uart_service();
  82   2          if(f_task_ad)
  83   2          {
  84   3            f_task_ad=0;
  85   3            TASK_ADC();
  86   3          }
  87   2        }
  88   1      }
  89          
  90          
  91          void Uart_PutChar(unsigned char value)
  92          {
  93   1        SBUF=value;//将接收到的数据放入到发送寄存器
  94   1        while(!TI);      //等待发送数据完成
  95   1        TI=0;            //清除发送完成标志位 
  96   1      }
  97          
  98          void Usart() interrupt 4
  99          {
 100   1        u8 receiveData;
 101   1      
 102   1        receiveData=SBUF;//出去接收到的数据
 103   1        RI = 0;//清除接收中断标志位
 104   1        uart_receive_input(receiveData);
 105   1      }
 106          
 107          
 108          u16  fre_set=1;
 109          void Timer0() interrupt 1
 110          {
 111   1        static u16 i=0;
 112   1        static u16 count=0;
 113   1        if(fre_set>=100)//频率大于等于100Hz
 114   1        {
 115   2          TL0 = (65535-11059/fre_set*500)%256;
 116   2          TH0 = (65535-11059/fre_set*500)/256;
C51 COMPILER V9.60.0.0   MAIN                                                              08/31/2021 12:55:21 PAGE 3   

 117   2          i=0;
 118   2          P54 =~P54;
 119   2          count++;
 120   2        }
 121   1        else if(fre_set<100)//0.1ms
 122   1        {
 123   2          TL0 = 0xAE;   //设置定时初始值
 124   2          TH0 = 0xFB;   //设置定时初始值
 125   2          if(fre_set==0)
 126   2          {
 127   3            P54=1;
 128   3          }
 129   2          else
 130   2          {
 131   3            i++;    
 132   3            if(i>(5000/fre_set))
 133   3            {
 134   4              P54 =~P54;
 135   4              i=0;
 136   4              count++;
 137   4            }
 138   3          }
 139   2        }
 140   1        if(count>(4*fre_set))
 141   1        {
 142   2          count=0;
 143   2          f_task_ad=1;
 144   2        }
 145   1      }
 146          
 147          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    599    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      9    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
